
# specify the name of your project
name: Deploy to Beanstalk

# Configure what events and branches you want to trigger your pipeline on, in this case I want it to be trgiggered when I push the code in react-profile branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
# Create jobs to create your image which you can deploy on AWS, I am running my Node20 application on ubuntu OS. 
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

# use npm to install the front end, the build the compiled react front end and copy to the backend 
    - name: install frontend
      env:
        CI: ""
      run: |
        cd frontend
        npm install
        npm run build
        cp -r build ../backend
# use npm to install the back end
    - name: install backend
      run: |
       cd backend
       npm install
# Create the deployment package by zipping the contents of the backend folder and naming it deploy.zip.  I am also copying this deploy.zip to the root directory  
    - name: Generate deployment package
      run: |
        cd backend
        zip -r deploy.zip *
        cp deploy.zip ../
# Getting the current timestamp to use to name the deployment version
    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time
# replace any ':' and '.' characters with a '-' so the deployment will have a valid name
    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'

# Now, its time to deploy our package to Beanstalk that we've configured earlier, to deploy our app we need Secret keys that we can get from the AWS user, every user has separate keys on AWS. 

    - name: Beanstalk Deploy for app
      uses: einaregilsson/beanstalk-deploy@v10
      with:
        aws_access_key: ${{secrets.AWS_ACCESS_REACT_KEY_ID}}
        aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_REACT_KEY}}
        application_name: "Bicycles"
        environment_name: "Bicycles-env"
        region: "us-east-1"
        version_label: "react-demo-new-${{ steps.format-time.outputs.replaced }}"
        deployment_package: deploy.zip

    - name: Deployed!
      run: echo App deployed to ELB
